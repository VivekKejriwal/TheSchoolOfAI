# -*- coding: utf-8 -*-
"""utils.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1917o48l9b-5zEUHqADPizWO-7HM8uxp4
"""

import torch
from torchsummary import summary
import matplotlib.pyplot as plt
import numpy as np
import cv2
import torch
import numpy as np
import matplotlib.pyplot as plt
from torchvision.utils import make_grid
from torchvision import transforms


def has_cuda():
    return torch.cuda.is_available()

def which_device():
    return torch.device("cuda" if has_cuda() else "cpu")

def init_seed(args):
    torch.manual_seed(args.seed)

    if has_cuda():
        print("CUDA Available")
        torch.cuda.manual_seed(args.seed)

def show_model_summary(model, device, input_size):
    print(summary(model, input_size=input_size))

def imshow(img):
    #img = img / 2 + 0.5     # unnormalize
    npimg = img.numpy()
    fig = plt.figure(figsize=(12,12))
    plt.imshow(np.transpose(npimg, (1, 2, 0)))